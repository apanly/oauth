<?php
require_class("Controller");
require_class("dcookie");
require_class("uri");
require_class("Bll_User");
class Home_DoRegController extends Controller{
    public function handle_request(){
        $reguri="/reg?errormsg=";
        $requestMethod=$_SERVER['REQUEST_METHOD'];
        if($requestMethod=="POST"){
            $request=Dispatcher::getInstance()->get_request();
            $response=Dispatcher::getInstance()->get_response();
            $params=$request->get_parameters();
            $username=$params['username'];
            $userpwd=$params['userpwd'];
            $saltkey=dcookie::dgetcookie("saltkey");
            $saltprekey=Dispatcher::getInstance()->get_config("saltprekey","oauth");
            $saltkey=$saltprekey.$saltkey;
            if(!filter_var($username,FILTER_VALIDATE_EMAIL)){
                $errormsg="用户名格式不对,请填写邮箱格式!!";
                $reguri.=$errormsg;
                $response->redirect($reguri);exit();
            }
            if(strlen($userpwd)<6){
                $errormsg="密码至少6位!!";
                $reguri.=$errormsg;
                $response->redirect($reguri);exit();
            }
            $blluser=new Bll_User();
            $userinfo=$blluser->findByEmail($username);
            if($userinfo){
                $errormsg="此用户已经存在!!";
                $reguri.=$errormsg;
                $response->redirect($reguri);exit();
            }
            $userpwd=md5(serialize($userpwd.$saltkey));
            $insertid=$blluser->addUser($username,$userpwd,$saltkey);
            if($insertid){
                dcookie::dsetcookie("loginoauth",$username."|".$insertid,86400,true);
                dcookie::dsetcookie("seckey",md5(serialize($username.$insertid.$saltkey)),86400,true);
                $loginrefer=dcookie::dgetcookie("loginreferer");
                dcookie::dsetcookie("loginreferer",'',-86400);
                if($loginrefer){
                    $response->redirect($loginrefer);
                }else{
                    $response->redirect(uri::englishComUri());
                }
            }
        }
    }
} 